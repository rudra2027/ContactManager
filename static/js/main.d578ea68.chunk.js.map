{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","onSubmit","e","preventDefault","newContact","post","target","EditContact","updContact","match","params","put","Props","history","push","Header","branding","href","Test","title","body","fetch","then","response","json","App","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.d578ea68.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(\r\n                    contact => contact.id !== action.payload\r\n                )\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contact.map(contact => contact.id == action.payload.id ? (contact = action.payload) : contact)\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n        this.setState({ contacts: res.data });\r\n    }\r\n\r\n    render() {\r\n        return ( <\r\n            Context.Provider value = { this.state } > { this.props.children } <\r\n            /Context.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n    //onShowClick = e => {\r\n    //(name, e) \r\n    //insttead of.bind method(onshow click = () => {}\r\n    //could be used)\r\n    //console.log() //(name);\r\n    onDeleteClick = async(id, dispatch) => {\r\n        try {\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n        } catch (e) {\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n        }\r\n    };\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n\r\n        return ( <\r\n                Consumer > {\r\n                    value => {\r\n                        const { dispatch } = value;\r\n                        return ( <\r\n                                div className = \"card card-body mb-3\" >\r\n                                <\r\n                                h4 > { name } { ' ' } <\r\n                                i onClick = {\r\n                                    () =>\r\n                                    this.setState({\r\n                                        showContactInfo: !this.state.showContactInfo\r\n                                    })\r\n                                }\r\n                                className = \"fas fa-sort-down\"\r\n                                style = {\r\n                                    { cursor: 'pointer' }\r\n                                }\r\n                                /> <\r\n                                i className = \"fas fa-times\"\r\n                                style = {\r\n                                    { cursor: 'pointer', float: 'right', color: 'red' }\r\n                                }\r\n                                onClick = { this.onDeleteClick.bind(this, id, dispatch) }\r\n                                /> <\r\n                                Link to = { `contact/edit/${id}` } >\r\n                                <\r\n                                i className = \"fas fa-pencil-alt\"\r\n                                style = {\r\n                                    {\r\n                                        cursor: 'pointer',\r\n                                        float: 'right',\r\n                                        color: 'black',\r\n                                        marginRight: '1rem'\r\n                                    }\r\n                                }\r\n                                /> < /\r\n                                Link > <\r\n                                /h4> {\r\n                                showContactInfo ? ( <\r\n                                    ul className = \"list-group\" >\r\n                                    <\r\n                                    li className = \"list-group-item\" > Email: { email } < /li> <\r\n                                    li className = \"list-group-item\" > Phone: { phone } < /li> < /\r\n                                    ul >\r\n                                ) : null\r\n                            } <\r\n                            /div>\r\n                    );\r\n                }\r\n            } <\r\n            /Consumer>\r\n    );\r\n}\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n    // constructor() {\r\n    //super();\r\n    //this.state = {\r\n    //  contacts: [{\r\n    //        id: 1,\r\n    //      name: 'Adarsh',\r\n    //    email: 'hattpagal@gmail.com',\r\n    //  phone: '9589211541'\r\n    //}, {\r\n    //  id: 2,\r\n    //name: 'Sakshi',\r\n    //email: 'hattpagali@gmail.com',\r\n    //phone: '9131394176'\r\n    //}, {\r\n    //  id: 3,\r\n    //name: 'Hanu',\r\n    //email: 'hattpagalo@gmail.com',\r\n    //phone: '8307830911'\r\n\r\n\r\n\r\n\r\n    //deleteContact = (id) => {\r\n    //const {\r\n    //contacts\r\n    //} = this.state;\r\n    //const newContacts = contacts.filter(contact => contact.id !== id);\r\n    //this.setState({ contacts: newContacts });\r\n\r\n    //};\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return ( <\r\n            Consumer > {\r\n                value => {\r\n                    const { contacts } = value;\r\n                    return ( <\r\n                        React.Fragment >\r\n                        <\r\n                        h1 className = \"display-4 mb-2\" >\r\n                        <\r\n                        span className = \"text-danger\" > Contact list < /span>  < /\r\n                        h1 > {\r\n                            contacts.map(contact => ( <\r\n                                Contact key = { contact.id }\r\n                                contact = { contact }\r\n                                />\r\n                            ))\r\n                        } <\r\n                        /React.Fragment>\r\n                    );\r\n                }\r\n            } <\r\n            /Consumer>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({ name, label, value, placeholder, type, onChange, error }) => {\r\n    return ( <\r\n        div className = \"form-group\" > < label htmlFor = {\r\n            name\r\n        } > {\r\n            label\r\n        } < /label> <input type={type} name={name} className={classnames('form-control form-control-lg',{'is-invalid':error})} placeholder={placeholder} value={value} onChange={onChange} / > {\r\n            error && <\r\n            div className = \"invalid-feedback\" > { error } < /div >\r\n        }\r\n\r\n\r\n        <\r\n        /\r\n        div > );\r\n};\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport uuid from 'react-uuid';\r\nimport axios from 'axios';\r\n\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        }\r\n    };\r\n    onSubmit = async(dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n        //check for errors\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'name needed' } });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'email needed' } });\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'cont. no. needed' } });\r\n            return;\r\n        }\r\n        const newContact = {\r\n\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n        //clear automatic\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            error: {}\r\n        });\r\n        // this.Props.history.push('/');\r\n\r\n\r\n    };\r\n    onChange = e => this.setState({\r\n        [e.target.name]: e.target.value\r\n    });\r\n    //onEmailChange = e => this.setState({ email: e.target.value });\r\n    //onPhoneChange = e => this.setState({ phone: e.target.value });\r\n\r\n    render() {\r\n\r\n        const { name, email, phone, errors } = this.state;\r\n        return ( < Consumer >\r\n\r\n            {\r\n                value => {\r\n                    const { dispatch } = value;\r\n                    return ( <\r\n                        div className = \"card mb-3\" > <\r\n                        div className = \"card-header\" > Add Contact < /div>  <div className=\"card-body\"> <\r\n                        form onSubmit = { this.onSubmit.bind(this, dispatch) } >\r\n\r\n\r\n                        <\r\n                        TextInputGroup label = \"Name\"\r\n                        name = \"name\"\r\n                        placeholder = \"Enter Name\"\r\n                        value = { name }\r\n                        onChange = { this.onChange }\r\n                        error = { errors.name }\r\n                        / >\r\n\r\n                        <\r\n                        TextInputGroup label = \"Email\"\r\n                        name = \"email\"\r\n                        type = \"email\"\r\n                        placeholder = \"Enter mail id\"\r\n                        value = { email }\r\n                        onChange = { this.onChange }\r\n                        error = { errors.email }\r\n                        /> \r\n\r\n                        <\r\n                        TextInputGroup label = \"phone\"\r\n                        name = \"phone\"\r\n                        placeholder = \"Enter mob.no.\"\r\n                        value = { phone }\r\n                        onChange = { this.onChange }\r\n                        error = { errors.phone }\r\n                        />\r\n\r\n\r\n\r\n\r\n                        <\r\n                        input type = \"submit\"\r\n                        value = \"Add Contact\"\r\n                        className = \"btn btn-light btn-block\" / >\r\n\r\n\r\n                        <\r\n                        /form > < /div > < /\r\n                        div >\r\n                    )\r\n                }\r\n            }\r\n\r\n\r\n\r\n            <\r\n            /Consumer>)\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n    export default AddContact;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport uuid from 'react-uuid';\r\nimport axios from 'axios';\r\n\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        }\r\n    };\r\n    async componentsDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`http://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    onSubmit = async(dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n        //check for errors\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'name needed' } });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'email needed' } });\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'cont. no. needed' } });\r\n            return;\r\n        }\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`http://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n        dispatch({\r\n            type: 'UPDATE_CONTACT',\r\n            payload: res.data\r\n        });\r\n        //clear automatic\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            error: {}\r\n        });\r\n        this.Props.history.push('/');\r\n\r\n\r\n    };\r\n    onChange = e => this.setState({\r\n        [e.target.name]: e.target.value\r\n    });\r\n    //onEmailChange = e => this.setState({ email: e.target.value });\r\n    //onPhoneChange = e => this.setState({ phone: e.target.value });\r\n\r\n    render() {\r\n\r\n        const { name, email, phone, errors } = this.state;\r\n        return ( < Consumer >\r\n\r\n            {\r\n                value => {\r\n                    const { dispatch } = value;\r\n                    return ( <\r\n                        div className = \"card mb-3\" > <\r\n                        div className = \"card-header\" > Edit Contact < /div>  <div className=\"card-body\"> <\r\n                        form onSubmit = { this.onSubmit.bind(this, dispatch) } >\r\n\r\n\r\n                        <\r\n                        TextInputGroup label = \"Name\"\r\n                        name = \"name\"\r\n                        placeholder = \"Enter Name\"\r\n                        value = { name }\r\n                        onChange = { this.onChange }\r\n                        error = { errors.name }\r\n                        / >\r\n\r\n                        <\r\n                        TextInputGroup label = \"Email\"\r\n                        name = \"email\"\r\n                        type = \"email\"\r\n                        placeholder = \"Enter mail id\"\r\n                        value = { email }\r\n                        onChange = { this.onChange }\r\n                        error = { errors.email }\r\n                        /> \r\n\r\n                        <\r\n                        TextInputGroup label = \"phone\"\r\n                        name = \"phone\"\r\n                        placeholder = \"Enter mob.no.\"\r\n                        value = { phone }\r\n                        onChange = { this.onChange }\r\n                        error = { errors.phone }\r\n                        />\r\n\r\n\r\n\r\n\r\n                        <\r\n                        input type = \"submit\"\r\n                        value = \"Update Contact\"\r\n                        className = \"btn btn-light btn-block\" / >\r\n\r\n\r\n                        <\r\n                        /form > < /div > < /\r\n                        div >\r\n                    )\r\n                }\r\n            }\r\n\r\n\r\n\r\n            <\r\n            /Consumer>)\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n    export default EditContact;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n    const {\r\n        branding\r\n    } = props;\r\n    return ( < nav className = \"navbar navbar-expand-sm navbar-dark bg-danger mb - 3 py - 0 \" >\r\n        <\r\n        div className = \"container\" >\r\n        <\r\n        a href = \"/\"\r\n        className = \"navbar-brand\" > { branding } < /a> <div><ul className=\"navbar-nav mr-auto\"> <\r\n        li className = \"nav-item\" >\r\n        <\r\n        i className = \"fas fa-home mb-2\" > < /i> <\r\n        Link to = \"/\"\r\n        className = \"nav-link.\" > Home < /Link> < /\r\n        li >\r\n\r\n\r\n\r\n\r\n        <\r\n        li className = \"nav-item\" >\r\n        <\r\n        i className = \"fas fa-plus mb-3\" > < /i> <\r\n        Link to = \"/contact/add\"\r\n        className = \"nav-link.\" > Add Contact < /Link> \r\n\r\n\r\n        <\r\n        /li> <\r\n        li className = \"nav-item\" >\r\n        <\r\n        i className = \"fas fa-question mb-2\" > < /i> <\r\n        Link to = \"/about\"\r\n        className = \"nav-link.\" > About < /Link>\r\n\r\n\r\n        <\r\n        /li>\r\n\r\n\r\n\r\n        <\r\n        /\r\n        ul > < /\r\n        div > < /\r\n        div >\r\n\r\n\r\n\r\n        <\r\n        /nav >\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nHeader.defaultProps = { branding: \"My App\" };\r\nHeader.propTypes = { branding: PropTypes.string.isRequired };\r\nconst headingStyle = { color: 'green', fontSize: '50px' };\r\nexport default Header;","import React from 'react';\r\n\r\nexport default props => {\r\n    return ( <\r\n        div >\r\n        < //{ props.match.params.id } \r\n        h1 className = \"display-4\" > About Contact Manager < /h1>  <\r\n        p className = \"lead\" > Simple App To Manage Contacts < /p> <\r\n        p className = \"text-secondary\" > version 1.0 .0 < /p>\r\n\r\n\r\n        <\r\n        /\r\n        div >\r\n    );\r\n};","import React from 'react'\r\n\r\nexport default () => {\r\n    return ( <\r\n        div >\r\n        <\r\n        h1 className = \"display-4\" > < span className = \"text-danger\" > 404 Error < /span> Page not found < /\r\n        h1 > < p className = \"lead\" > sorry non existing page < /p > < /\r\n        div >\r\n    )\r\n}","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    };\r\n\r\n\r\n\r\n\r\n    componentDidMount() {\r\n            fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n                .then(response => response.json())\r\n                .then(data => this.setState({\r\n                    title: data.title,\r\n                    body: data.body\r\n                }));\r\n        }\r\n        // componentWillMount() {\r\n        //console.log('componentWillMount...');\r\n        //}\r\n        //componentDidUpdate() {\r\n        //console.log('componentDidUpdate...');\r\n        //}\r\n        //componentWillUpdate() {\r\n        //console.log('componentWillUpdate...');\r\n        //}\r\n        //componentWillReceiveProps(nextProps, state) {\r\n        //console.log('componentWillReceiveProp...');\r\n        //}\r\n\r\n    //    static getDerivedStateFromProps(nextProps, prevState) {\r\n    //  return null;\r\n    //}\r\n    //getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    //console.log('componentWillReceiveProp...');\r\n\r\n    //}\r\n\r\n\r\n    render() {\r\n        const { title, body } = this.state;\r\n\r\n        return ( <\r\n            div >\r\n            <\r\n            h1 > {\r\n                title\r\n            } < /h1><p>{body}</p > < /\r\n            div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\n\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        return ( <\n            Provider >\n            <\n            Router >\n            <\n            div className = \"App\" >\n            <\n            Header branding = \"Contact Manager\" / >\n            <\n            div className = \"container\" >\n            <\n            Switch >\n            <\n            Route exact path = \"/home\"\n            component = { Contacts }\n            /> <\n            Route exact path = \"/contact/add\"\n            component = { AddContact }\n            />  <\n            Route exact path = \"/contact/edit/:id\"\n            component = { EditContact }\n            />  <\n            Route exact path = \"/about\"\n            component = { About }\n            /> <\n            Route exact path = \"/test\"\n            component = { Test }\n            /> <\n            Route component = { NotFound }\n            /> < /\n            Switch > <\n            /div> < /\n            div > <\n            /Router> < /\n            Provider >\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}